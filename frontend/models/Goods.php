<?php
/**
 * Created by PhpStorm.
 * User: francics <allenfrancics@foxmail.com>
 * Date: 2016/5/2
 * Time: 16:16
 */
namespace frontend\models;

use Yii;
use yii\data\ActiveDataProvider;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "goods".
 *
 * @property string $goods_id
 * @property string $username
 * @property string $image_id
 * @property string $default_image_id
 * @property string $goods_name
 * @property string $goods_title
 * @property string $goods_des
 * @property string $area_id
 * @property string $cat_id
 * @property string $sc_price
 * @property string $price
 * @property string $wl_price
 * @property string $goods_stock
 * @property string $goods_cur_stock
 * @property string $pt_price
 * @property string $mark
 */
class Goods extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%goods}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['goods_name', 'username', 'image_id', 'default_image_id', 'goods_title', 'goods_des', 'area_id', 'cat_id', 'sc_price', 'price', 'wl_price', 'goods_stock', 'goods_cur_stock', 'pt_price'], 'required'],
            [['default_image_id', 'area_id', 'cat_id', 'sc_price', 'price', 'wl_price', 'goods_stock', 'goods_cur_stock', 'pt_price', 'status', 'click'], 'integer'],
            [['image_id'], 'string', 'max' => 50],
            [['goods_name', 'username', 'goods_title'], 'string', 'max' => 100],
            [['goods_des', 'mark'], 'string', 'max' => 255],
        ];
    }

    public function attributes()
    {
        return parent::attributes(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'goods_id' => 'Goods ID',
            'username' => 'Username',
            'image_id' => 'Image ID',
            'default_image_id' => 'Default Image Id',
            'goods_name' => '产品名称',
            'goods_title' => 'Goods Title',
            'goods_des' => 'Goods Des',
            'area_id' => 'Area ID',
            'cat_id' => 'Cat ID',
            'sc_price' => '市场价格',
            'price' => '售价',
            'wl_price' => '物流价格',
            'goods_stock' => '产品库存',
            'goods_cur_stock' => 'Goods Cur Stock',
            'pt_price' => 'Pt Price',
            'mark' => 'Mark',
        ];
    }

    /**
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        if (is_string($this->image_id) && !empty($this->image_id)) {
            $image_id_arr = explode(',', $this->image_id);
            GoodsImages::updateAll(['goods_id' => $this->goods_id], ['image_id' => $image_id_arr]);
        }
    }

    /**
     * 检索产品列表
     * @param $params
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = self::find();
        //$query->joinWith(['goodsImage']);
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 12,
            ],
        ]);

        if (!$this->load($params, '')) {
            return $dataProvider;
        }


        $query->andFilterWhere([
            'status' => $this->status,
            'goods_name' => $this->goods_name,
        ]);
        if (isset($params['action']) && $params['action'] == 'lowstock') {
            $query->andFilterWhere(['<', 'goods_cur_stock', 90]);
        }

        return $dataProvider;
    }

    public function fields()
    {
        $fields = parent::fields(); // TODO: Change the autogenerated stub
        return $fields;

    }

    public function getDefaultImage()
    {
        return self::hasOne(GoodsImages::className(), ['image_id' => 'default_image_id']);
    }

    public function getContent()
    {
        return self::hasOne(GoodsContent::className(), ['goods_id' => 'goods_id']);
    }

    public function getGoodsImage()
    {
        return self::hasMany(GoodsImages::className(), ['goods_id' => 'goods_id']);
    }
}
